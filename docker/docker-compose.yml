services:
  mcp-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: mcp-server-unified:latest # Use the same tag as built
    container_name: mcp-server-unified
    restart: unless-stopped
    ports:
      - "23001-23020:23001-23020" # Match Dockerfile EXPOSE

    volumes:
      # Configuration is read-write (client config generation)
      - ../config:/app/config
      - ../logs:/app/logs
      - ../pids:/app/pids
      - ../mcp-data:/app/mcp-data     # Generic data persistence
      - ../mcp-servers:/app/mcp-servers  # Source code persistence

      # --- Persistent volumes for runtime installations (MATCH NON-ROOT USER) ---
      # Ensure these directories exist on the host and have correct permissions (UID/GID 1000)
      # Example host commands:
      #   mkdir -p npm-global uvx-global uv-cache
      #   sudo chown -R 1000:1000 npm-global uvx-global uv-cache
      - ../npm-global:/home/mcp/.npm      # NPM global cache/install for 'mcp' user
      - ../uvx-global:/home/mcp/.uvx      # UVX install location for 'mcp' user (assuming ~/.uvx)
      - ../uv-cache:/home/mcp/.cache/uv   # UV cache persistence for 'mcp' user

      # --- Volumes NOT typically needed for production ---
      # - ../scripts:/app/scripts # Scripts are copied in Dockerfile
      # - ../pipx-home:/home/mcp/.local/pipx # mcp-proxy installed in image
      # - ../node-modules:/app/node_modules # Only if project-local node deps needed & not installed in image

    environment:
      # Keep locale and timezone settings (match Dockerfile)
      TZ: Asia/Shanghai
      LANG: zh_CN.UTF-8
      LANGUAGE: zh_CN:zh
      LC_ALL: zh_CN.UTF-8
      # Host resolution - REAL_HOST_IP is critical for client access from outside Docker
      EXTERNAL_HOST: "host.docker.internal" # Docker Desktop default, might vary
      # !!! IMPORTANT: Replace with your host machine's actual IP accessible by clients !!!
      REAL_HOST_IP: "192.168.1.8" # <---- UPDATE THIS IP ADDRESS
      # Environment variables needed by the container/tools (match Dockerfile ENV for non-root)
      MCP_DAEMON_MODE: "true" # Set explicitly, though entrypoint uses 'daemon' command
      MCP_DATA_DIR: "/app/mcp-data"
      NPM_CONFIG_PREFIX: "/home/mcp/.npm"
      NODE_PATH: "/app/node_modules:/home/mcp/.npm/lib/node_modules" # Include global path
      PIPX_HOME: "/home/mcp/.local/pipx"
      PIPX_BIN_DIR: "/home/mcp/.local/bin"
      UV_CACHE_DIR: "/home/mcp/.cache/uv"

    # Entrypoint is defined in the Dockerfile, no need to override here unless necessary

    # Security: Already handled by non-root user. `no-new-privileges` is still good.
    security_opt:
      - no-new-privileges:true

    # Healthcheck (adapt port/command if needed, uses localhost inside container)
    healthcheck:
      # Test connection to the primary fetch server port (adjust if different)
      test: ["CMD", "python", "-c", "import socket; s=socket.create_connection(('localhost', 23001), timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s # Increased start period slightly